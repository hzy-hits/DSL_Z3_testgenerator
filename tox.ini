[tox]
envlist = py{38,39,310,311,312}, lint, type, docs
isolated_build = True
skip_missing_interpreters = True

[testenv]
description = Run unit tests with pytest
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-mock>=3.10
    pytest-timeout>=2.1
commands =
    pytest {posargs:tests/} -v --cov=src --cov-report=term-missing --cov-report=html

[testenv:lint]
description = Run linters (flake8, black, isort)
deps =
    black>=23.0
    isort>=5.12
    flake8>=6.0
    flake8-docstrings>=1.7
    flake8-bugbear>=23.0
    flake8-comprehensions>=3.10
    pylint>=2.17
commands =
    black --check src tests main.py
    isort --check-only src tests main.py
    flake8 src tests main.py
    pylint src

[testenv:format]
description = Format code with black and isort
deps =
    black>=23.0
    isort>=5.12
commands =
    black src tests main.py
    isort src tests main.py

[testenv:type]
description = Run type checking with mypy
deps =
    mypy>=1.0
    types-PyYAML>=6.0
    types-tabulate>=0.9
commands =
    mypy src

[testenv:security]
description = Run security checks with bandit and safety
deps =
    bandit[toml]>=1.7
    safety>=2.3
commands =
    bandit -r src -ll
    safety check

[testenv:docs]
description = Build documentation with Sphinx
changedir = docs
deps =
    sphinx>=5.0
    sphinx-rtd-theme>=1.2
    myst-parser>=1.0
    sphinx-autodoc-typehints>=1.22
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:dev]
description = Development environment with all dependencies
deps =
    -r requirements-dev.txt
commands =
    python -c "print('Development environment ready!')"

[testenv:build]
description = Build distribution packages
deps =
    build>=0.10
    twine>=4.0
commands =
    python -m build
    twine check dist/*

[testenv:pre-commit]
description = Run pre-commit hooks
deps =
    pre-commit>=3.0
commands =
    pre-commit run --all-files

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310, lint, type
    3.11: py311
    3.12: py312

[pytest]
addopts = -ra --strict-markers
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

[coverage:run]
source = src
branch = True
omit =
    */tests/*
    */test_*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.: