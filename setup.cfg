[metadata]
name = dsl-test-generator
version = attr: src.__version__
author = DSL Test Generator Team
author_email = contact@dsl-test-generator.com
description = A high-quality DSL test generator that automatically generates comprehensive test cases from YAML specifications
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/hzy-hits/DSL_Z3_testgenerator
project_urls =
    Bug Tracker = https://github.com/hzy-hits/DSL_Z3_testgenerator/issues
    Documentation = https://github.com/hzy-hits/DSL_Z3_testgenerator/blob/main/README.md
    Source Code = https://github.com/hzy-hits/DSL_Z3_testgenerator
license = MIT
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Topic :: Software Development :: Testing
    Topic :: Software Development :: Quality Assurance
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Operating System :: OS Independent
    Environment :: Console

[options]
packages = find:
python_requires = >=3.8
install_requires =
    pyyaml>=6.0
    z3-solver>=4.12.0
    colorama>=0.4.6
    tabulate>=0.9.0
include_package_data = True
zip_safe = False

[options.packages.find]
where = .
include = src*, main

[options.entry_points]
console_scripts =
    dsl-test-gen = main:main
    dsl-test-generator = main:main

[options.package_data]
* = *.yaml, *.yml, *.json, *.md

[bdist_wheel]
universal = 0

[flake8]
max-line-length = 120
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg-info,
    .tox,
    .venv,
    venv,
    outputs,
    test_outputs
ignore = E203, E266, W503
per-file-ignores =
    __init__.py:F401

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
ignore_missing_imports = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --strict-markers
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 120
skip_gitignore = True

[pydocstyle]
inherit = false
match = .*\.py
match-dir = (?!test|tests|migrations|venv|\.venv|build|dist).*
convention = google