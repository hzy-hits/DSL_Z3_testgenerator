[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dsl-test-generator"
version = "8.0.0"
description = "A high-quality DSL test generator that automatically generates comprehensive test cases from YAML specifications"
readme = "README.md"
requires-python = ">=3.8.1"
license = { text = "MIT" }
authors = [
    { name = "DSL Test Generator Team", email = "contact@dsl-test-generator.com" },
]
maintainers = [
    { name = "DSL Test Generator Team", email = "contact@dsl-test-generator.com" },
]
keywords = [
    "testing",
    "test-generation",
    "dsl",
    "yaml",
    "z3",
    "smt-solver",
    "automated-testing",
    "quality-assurance",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
    "Natural Language :: Chinese (Simplified)",
]

dependencies = [
    "pyyaml>=6.0",
    "z3-solver>=4.12.0",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "tox>=4.0",
]
docs = ["sphinx>=5.0", "sphinx-rtd-theme>=1.2", "myst-parser>=1.0"]
all = ["dsl-test-generator[dev,docs]"]

[project.urls]
Homepage = "https://github.com/hzy-hits/DSL_Z3_testgenerator"
Documentation = "https://github.com/hzy-hits/DSL_Z3_testgenerator/blob/main/README.md"
Repository = "https://github.com/hzy-hits/DSL_Z3_testgenerator"
Issues = "https://github.com/hzy-hits/DSL_Z3_testgenerator/issues"
Changelog = "https://github.com/hzy-hits/DSL_Z3_testgenerator/blob/main/CHANGELOG.md"

[project.scripts]
dsl-test-gen = "main:main"
dsl-test-generator = "main:main"

[tool.setuptools]
packages = [
    "src",
    "src.cli",
    "src.core",
    "src.generators",
    "src.generators.v8",
    "src.generators.v8_extended",
    "src.generators.v8_improved",
    "src.generators.v8_modular",
    "src.utils",
]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md", "*.txt"]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | outputs
  | test_outputs
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
skip = ["venv", ".venv", "build", "dist", "outputs", "test_outputs"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
exclude = ["build/", "dist/", "outputs/", "test_outputs/", "venv/", ".venv/"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--ignore=outputs",
    "--ignore=test_outputs",
    "--ignore=build",
    "--ignore=dist",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "pass",
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "outputs",
    "test_outputs",
]

[tool.ruff.isort]
known-third-party = ["z3", "yaml", "colorama", "tabulate"]

[tool.bandit]
exclude_dirs = ["tests", "test_outputs", "outputs", "venv", ".venv"]
skips = ["B101", "B601"]
