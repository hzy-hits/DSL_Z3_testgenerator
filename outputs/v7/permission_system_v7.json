{
  "meta": {
    "generator": "Unified DSL Test Generator v7.0",
    "domain": "Role-Based Access Control",
    "timestamp": "2025-07-11T07:42:37.233688",
    "dsl_file": "examples/intermediate/permission_system.yaml",
    "test_requirements_parsed": true
  },
  "summary": {
    "total_tests": 34,
    "test_distribution": {
      "collection": 11,
      "combinatorial": 4,
      "boundary": 2,
      "functional": 4,
      "constraint_satisfaction": 4,
      "rule_activation": 3,
      "negative": 6
    },
    "tag_distribution": {
      "collection": 11,
      "roles": 8,
      "empty": 4,
      "required_test": 10,
      "single": 7,
      "permissions": 8,
      "parent_roles": 3,
      "combinatorial": 4,
      "2way": 4,
      "parent": 4,
      "boundary": 2,
      "id": 3,
      "min": 1,
      "below_min": 1,
      "negative": 7,
      "functional": 4,
      "user": 2,
      "business_data": 2,
      "complete": 2,
      "role": 2,
      "constraint": 4,
      "satisfaction": 4,
      "rule": 3,
      "activation": 3,
      "admin_has_all_permissions": 1,
      "inactive_users_have_no_permissions": 1,
      "multiple_roles_increase_permissions": 1,
      "type_validation": 6,
      "is_active": 1
    },
    "priority_distribution": {
      "high": 22,
      "medium": 12
    },
    "requirements_coverage": {
      "test_requirements": [
        {
          "name": "Permission boundaries",
          "type": "collection",
          "covered": true
        },
        {
          "name": "Role inheritance",
          "type": "combinatorial",
          "covered": true
        },
        {
          "name": "Active/inactive states",
          "type": "boundary",
          "covered": true
        }
      ],
      "constraints": [
        {
          "constraint": "user_is_active == true -> size(user_roles) >= 1",
          "covered": true
        },
        {
          "constraint": "size(user_permissions) >= size(user_roles)",
          "covered": true
        },
        {
          "constraint": "size(role_permissions) >= 1",
          "covered": true
        },
        {
          "constraint": "size(role_parent_roles) < 5",
          "covered": true
        }
      ],
      "rules": [
        {
          "rule": "Admin has all permissions",
          "covered": true
        },
        {
          "rule": "Inactive users have no permissions",
          "covered": true
        },
        {
          "rule": "Multiple roles increase permissions",
          "covered": true
        }
      ]
    }
  },
  "test_suites": {
    "collection": [
      {
        "id": "TEST_0001",
        "name": "Required test - Empty roles",
        "type": "collection",
        "description": "Test roles empty as required",
        "test_data": {
          "user_roles": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "roles",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0002",
        "name": "Required test - Single roles",
        "type": "collection",
        "description": "Test roles with single element as required",
        "test_data": {
          "user_roles": [
            "guest"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "roles",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0003",
        "name": "Required test - Empty permissions",
        "type": "collection",
        "description": "Test permissions empty as required",
        "test_data": {
          "user_permissions": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0004",
        "name": "Required test - Single permissions",
        "type": "collection",
        "description": "Test permissions with single element as required",
        "test_data": {
          "user_permissions": [
            "read"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0005",
        "name": "Required test - Empty permissions",
        "type": "collection",
        "description": "Test permissions empty as required",
        "test_data": {
          "role_permissions": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0006",
        "name": "Required test - Single permissions",
        "type": "collection",
        "description": "Test permissions with single element as required",
        "test_data": {
          "role_permissions": [
            "write"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0007",
        "name": "Required test - Empty parent_roles",
        "type": "collection",
        "description": "Test parent_roles empty as required",
        "test_data": {
          "role_parent_roles": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "parent_roles",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0008",
        "name": "Required test - Single parent_roles",
        "type": "collection",
        "description": "Test parent_roles with single element as required",
        "test_data": {
          "role_parent_roles": [
            "admin"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "parent_roles",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0032",
        "name": "Required test - Single roles",
        "type": "collection",
        "description": "Test roles with single element as required",
        "test_data": {
          "user_roles": [
            "premium"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "roles",
          "single"
        ]
      },
      {
        "id": "TEST_0034",
        "name": "Required test - Single permissions",
        "type": "collection",
        "description": "Test permissions with single element as required",
        "test_data": {
          "user_permissions": [
            "execute"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "single"
        ]
      },
      {
        "id": "TEST_0036",
        "name": "Required test - Single permissions",
        "type": "collection",
        "description": "Test permissions with single element as required",
        "test_data": {
          "role_permissions": [
            "admin"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "permissions",
          "single"
        ]
      }
    ],
    "combinatorial": [
      {
        "id": "TEST_0009",
        "name": "2-way combination #1: roles × parent",
        "type": "combinatorial",
        "description": "Test combination of roles and parent",
        "test_data": {
          "user_roles": [],
          "role_parent_roles": []
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "roles",
          "parent"
        ]
      },
      {
        "id": "TEST_0010",
        "name": "2-way combination #2: roles × parent",
        "type": "combinatorial",
        "description": "Test combination of roles and parent",
        "test_data": {
          "user_roles": [],
          "role_parent_roles": [
            "COMBO10"
          ]
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "roles",
          "parent"
        ]
      },
      {
        "id": "TEST_0011",
        "name": "2-way combination #3: roles × parent",
        "type": "combinatorial",
        "description": "Test combination of roles and parent",
        "test_data": {
          "user_roles": [
            "COMBO10"
          ],
          "role_parent_roles": []
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "roles",
          "parent"
        ]
      },
      {
        "id": "TEST_0012",
        "name": "2-way combination #4: roles × parent",
        "type": "combinatorial",
        "description": "Test combination of roles and parent",
        "test_data": {
          "user_roles": [
            "COMBO10"
          ],
          "role_parent_roles": [
            "COMBO10"
          ]
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "roles",
          "parent"
        ]
      }
    ],
    "boundary": [
      {
        "id": "TEST_0013",
        "name": "Boundary test: id = 1",
        "type": "boundary",
        "description": "Test minimum value for id",
        "test_data": {
          "user_id": 1
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "id",
          "min",
          "required_test"
        ]
      },
      {
        "id": "TEST_0014",
        "name": "Boundary test: id < min",
        "type": "boundary",
        "description": "Test below minimum value for id",
        "test_data": {
          "user_id": 0
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "id",
          "below_min",
          "negative",
          "required_test"
        ]
      }
    ],
    "functional": [
      {
        "id": "TEST_0015",
        "name": "Create User with valid business data",
        "type": "functional",
        "description": "Test creating User with realistic data",
        "test_data": {
          "user_id": 1,
          "user_roles": [
            "premium",
            "guest"
          ],
          "user_permissions": [
            "execute",
            "admin",
            "write",
            "read",
            "delete"
          ],
          "user_is_active": true
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "user",
          "business_data"
        ]
      },
      {
        "id": "TEST_0016",
        "name": "Create User with all fields",
        "type": "functional",
        "description": "Test User with all optional fields",
        "test_data": {
          "user_id": 2,
          "user_roles": [
            "moderator",
            "admin",
            "guest",
            "user",
            "premium"
          ],
          "user_permissions": [
            "delete",
            "admin",
            "execute",
            "read",
            "write"
          ],
          "user_is_active": true
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "user",
          "complete"
        ]
      },
      {
        "id": "TEST_0017",
        "name": "Create Role with valid business data",
        "type": "functional",
        "description": "Test creating Role with realistic data",
        "test_data": {
          "role_name": "Role_36",
          "role_permissions": [
            "write",
            "admin",
            "read",
            "delete"
          ],
          "role_parent_roles": [
            "moderator"
          ]
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "role",
          "business_data"
        ]
      },
      {
        "id": "TEST_0018",
        "name": "Create Role with all fields",
        "type": "functional",
        "description": "Test Role with all optional fields",
        "test_data": {
          "role_name": "Role_61",
          "role_permissions": [
            "read",
            "execute",
            "write"
          ],
          "role_parent_roles": [
            "moderator",
            "user",
            "guest",
            "admin"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "role",
          "complete"
        ]
      }
    ],
    "constraint_satisfaction": [
      {
        "id": "TEST_0019",
        "name": "Constraint satisfaction: user_is_active == true -> size(user_roles) >= 1",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "user_roles": [
            "user"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "user_is_active == true -> size(user_roles) >= 1"
        ]
      },
      {
        "id": "TEST_0020",
        "name": "Constraint satisfaction: size(user_permissions) >= size(user_roles)",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "user_permissions": [
            "admin",
            "edit",
            "execute",
            "view",
            "read",
            "write"
          ],
          "user_roles": [
            "moderator",
            "admin",
            "user",
            "staff"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "size(user_permissions) >= size(user_roles)"
        ]
      },
      {
        "id": "TEST_0021",
        "name": "Constraint satisfaction: size(role_permissions) >= 1",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "role_permissions": [
            "execute"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "size(role_permissions) >= 1"
        ]
      },
      {
        "id": "TEST_0022",
        "name": "Constraint satisfaction: size(role_parent_roles) < 5",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "role_parent_roles": [
            "moderator"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "size(role_parent_roles) < 5"
        ]
      }
    ],
    "rule_activation": [
      {
        "id": "TEST_0025",
        "name": "Rule activation: Admin has all permissions",
        "type": "rule_activation",
        "description": "Test Admin has all permissions when condition is true",
        "test_data": {},
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "admin_has_all_permissions"
        ],
        "rules_tested": [
          "Admin has all permissions"
        ]
      },
      {
        "id": "TEST_0027",
        "name": "Rule activation: Inactive users have no permissions",
        "type": "rule_activation",
        "description": "Test Inactive users have no permissions when condition is true",
        "test_data": {
          "user_is_active": 0
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "inactive_users_have_no_permissions"
        ],
        "rules_tested": [
          "Inactive users have no permissions"
        ]
      },
      {
        "id": "TEST_0029",
        "name": "Rule activation: Multiple roles increase permissions",
        "type": "rule_activation",
        "description": "Test Multiple roles increase permissions when condition is true",
        "test_data": {
          "user_roles": [
            "admin",
            "moderator",
            "staff",
            "guest",
            "user",
            "vip"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "multiple_roles_increase_permissions"
        ],
        "rules_tested": [
          "Multiple roles increase permissions"
        ]
      }
    ],
    "negative": [
      {
        "id": "TEST_0039",
        "name": "Type validation for id",
        "type": "negative",
        "description": "Testing wrong type for id",
        "test_data": {
          "user_id": "not_a_number"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "id"
        ]
      },
      {
        "id": "TEST_0040",
        "name": "Type validation for roles",
        "type": "negative",
        "description": "Testing wrong type for roles",
        "test_data": {
          "user_roles": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "roles"
        ]
      },
      {
        "id": "TEST_0041",
        "name": "Type validation for permissions",
        "type": "negative",
        "description": "Testing wrong type for permissions",
        "test_data": {
          "user_permissions": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "permissions"
        ]
      },
      {
        "id": "TEST_0042",
        "name": "Type validation for is_active",
        "type": "negative",
        "description": "Testing wrong type for is_active",
        "test_data": {
          "user_is_active": "not_a_bool"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "is_active"
        ]
      },
      {
        "id": "TEST_0043",
        "name": "Type validation for permissions",
        "type": "negative",
        "description": "Testing wrong type for permissions",
        "test_data": {
          "role_permissions": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "permissions"
        ]
      },
      {
        "id": "TEST_0044",
        "name": "Type validation for parent_roles",
        "type": "negative",
        "description": "Testing wrong type for parent_roles",
        "test_data": {
          "role_parent_roles": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "parent_roles"
        ]
      }
    ]
  }
}