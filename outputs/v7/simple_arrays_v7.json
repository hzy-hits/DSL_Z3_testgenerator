{
  "meta": {
    "generator": "Unified DSL Test Generator v7.0",
    "domain": "Score Management System",
    "timestamp": "2025-07-11T07:42:37.171587",
    "dsl_file": "examples/basic/simple_arrays.yaml",
    "test_requirements_parsed": true
  },
  "summary": {
    "total_tests": 20,
    "test_distribution": {
      "collection": 6,
      "boundary": 2,
      "functional": 2,
      "constraint_satisfaction": 3,
      "rule_activation": 2,
      "rule_deactivation": 1,
      "negative": 4
    },
    "tag_distribution": {
      "collection": 6,
      "test_scores": 4,
      "empty": 2,
      "required_test": 6,
      "single": 4,
      "course_ids": 4,
      "boundary": 2,
      "id": 3,
      "min": 1,
      "below_min": 1,
      "negative": 5,
      "functional": 2,
      "student": 2,
      "business_data": 1,
      "complete": 1,
      "constraint": 3,
      "satisfaction": 3,
      "rule": 3,
      "activation": 2,
      "active_students_must_have_scores": 2,
      "deactivation": 1,
      "many_courses_means_many_tests": 1,
      "type_validation": 4,
      "is_active": 1
    },
    "priority_distribution": {
      "high": 13,
      "medium": 7
    },
    "requirements_coverage": {
      "test_requirements": [
        {
          "name": "Array tests",
          "type": "collection",
          "covered": true
        },
        {
          "name": "Boundary tests",
          "type": "boundary",
          "covered": true
        }
      ],
      "constraints": [
        {
          "constraint": "student_id >= 1",
          "covered": true
        },
        {
          "constraint": "size(student_test_scores) <= 10",
          "covered": true
        },
        {
          "constraint": "size(student_course_ids) >= 1",
          "covered": true
        }
      ],
      "rules": [
        {
          "rule": "Active students must have scores",
          "covered": true
        },
        {
          "rule": "Many courses means many tests",
          "covered": true
        }
      ]
    }
  },
  "test_suites": {
    "collection": [
      {
        "id": "TEST_0001",
        "name": "Required test - Empty test_scores",
        "type": "collection",
        "description": "Test test_scores empty as required",
        "test_data": {
          "student_test_scores": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "test_scores",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0002",
        "name": "Required test - Single test_scores",
        "type": "collection",
        "description": "Test test_scores with single element as required",
        "test_data": {
          "student_test_scores": [
            1001
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "test_scores",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0003",
        "name": "Required test - Empty course_ids",
        "type": "collection",
        "description": "Test course_ids empty as required",
        "test_data": {
          "student_course_ids": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "course_ids",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0004",
        "name": "Required test - Single course_ids",
        "type": "collection",
        "description": "Test course_ids with single element as required",
        "test_data": {
          "student_course_ids": [
            101
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "course_ids",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0020",
        "name": "Required test - Single test_scores",
        "type": "collection",
        "description": "Test test_scores with single element as required",
        "test_data": {
          "student_test_scores": [
            1032
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "test_scores",
          "single"
        ]
      },
      {
        "id": "TEST_0022",
        "name": "Required test - Single course_ids",
        "type": "collection",
        "description": "Test course_ids with single element as required",
        "test_data": {
          "student_course_ids": [
            106
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "course_ids",
          "single"
        ]
      }
    ],
    "boundary": [
      {
        "id": "TEST_0005",
        "name": "Boundary test: id = 1",
        "type": "boundary",
        "description": "Test minimum value for id",
        "test_data": {
          "student_id": 1
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "id",
          "min",
          "required_test"
        ]
      },
      {
        "id": "TEST_0006",
        "name": "Boundary test: id < min",
        "type": "boundary",
        "description": "Test below minimum value for id",
        "test_data": {
          "student_id": 0
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "id",
          "below_min",
          "negative",
          "required_test"
        ]
      }
    ],
    "functional": [
      {
        "id": "TEST_0007",
        "name": "Create Student with valid business data",
        "type": "functional",
        "description": "Test creating Student with realistic data",
        "test_data": {
          "student_id": 2024001,
          "student_test_scores": [
            1011,
            1012,
            1013
          ],
          "student_course_ids": 2024002,
          "student_is_active": false
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "student",
          "business_data"
        ]
      },
      {
        "id": "TEST_0008",
        "name": "Create Student with all fields",
        "type": "functional",
        "description": "Test Student with all optional fields",
        "test_data": {
          "student_id": 2024003,
          "student_test_scores": [
            1014,
            1015,
            1016,
            1017,
            1018,
            1019,
            1020
          ],
          "student_course_ids": 2024004,
          "student_is_active": false
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "student",
          "complete"
        ]
      }
    ],
    "constraint_satisfaction": [
      {
        "id": "TEST_0009",
        "name": "Constraint satisfaction: student_id >= 1",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "student_id": 6
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "student_id >= 1"
        ]
      },
      {
        "id": "TEST_0011",
        "name": "Constraint satisfaction: size(student_test_scores) <= 10",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "student_test_scores": [
            "item_0",
            "item_1",
            "item_2",
            "item_3",
            "item_4",
            "item_5",
            "item_6",
            "item_7"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "size(student_test_scores) <= 10"
        ]
      },
      {
        "id": "TEST_0012",
        "name": "Constraint satisfaction: size(student_course_ids) >= 1",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "student_course_ids": [
            1021,
            1022,
            1023,
            1024,
            1025,
            1026
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "size(student_course_ids) >= 1"
        ]
      }
    ],
    "rule_activation": [
      {
        "id": "TEST_0015",
        "name": "Rule activation: Active students must have scores",
        "type": "rule_activation",
        "description": "Test Active students must have scores when condition is true",
        "test_data": {
          "student_is_active": 1
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "active_students_must_have_scores"
        ],
        "rules_tested": [
          "Active students must have scores"
        ]
      },
      {
        "id": "TEST_0017",
        "name": "Rule activation: Many courses means many tests",
        "type": "rule_activation",
        "description": "Test Many courses means many tests when condition is true",
        "test_data": {
          "student_course_ids": [
            1027,
            1028,
            1029,
            1030,
            1031
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "many_courses_means_many_tests"
        ],
        "rules_tested": [
          "Many courses means many tests"
        ]
      }
    ],
    "rule_deactivation": [
      {
        "id": "TEST_0016",
        "name": "Rule deactivation: Active students must have scores",
        "type": "rule_deactivation",
        "description": "Test Active students must have scores when condition is false",
        "test_data": {},
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "rule",
          "deactivation",
          "active_students_must_have_scores"
        ],
        "rules_tested": [
          "Active students must have scores"
        ]
      }
    ],
    "negative": [
      {
        "id": "TEST_0023",
        "name": "Type validation for id",
        "type": "negative",
        "description": "Testing wrong type for id",
        "test_data": {
          "student_id": "not_a_number"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "id"
        ]
      },
      {
        "id": "TEST_0024",
        "name": "Type validation for test_scores",
        "type": "negative",
        "description": "Testing wrong type for test_scores",
        "test_data": {
          "student_test_scores": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "test_scores"
        ]
      },
      {
        "id": "TEST_0025",
        "name": "Type validation for course_ids",
        "type": "negative",
        "description": "Testing wrong type for course_ids",
        "test_data": {
          "student_course_ids": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "course_ids"
        ]
      },
      {
        "id": "TEST_0026",
        "name": "Type validation for is_active",
        "type": "negative",
        "description": "Testing wrong type for is_active",
        "test_data": {
          "student_is_active": "not_a_bool"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "is_active"
        ]
      }
    ]
  }
}