{
  "meta": {
    "generator": "Unified DSL Test Generator v5.0",
    "domain": "Role-Based Access Control",
    "timestamp": "2025-07-11T00:29:31.289984",
    "dsl_file": "examples/intermediate/permission_system.yaml",
    "test_requirements_parsed": true
  },
  "summary": {
    "total_tests": 20,
    "test_distribution": {
      "functional": 4,
      "constraint_satisfaction": 1,
      "collection": 6,
      "boundary": 2,
      "negative": 7
    },
    "tag_distribution": {
      "functional": 4,
      "user": 2,
      "business_data": 2,
      "complete": 2,
      "role": 2,
      "constraint": 1,
      "satisfaction": 1,
      "collection": 6,
      "user_permissions": 3,
      "empty": 2,
      "required_test": 6,
      "role_parent_roles": 3,
      "user_roles": 2,
      "single": 4,
      "role_permissions": 2,
      "boundary": 2,
      "user_id": 3,
      "min": 1,
      "below_min": 1,
      "negative": 8,
      "type_validation": 7,
      "user_is_active": 1,
      "role_name": 1
    },
    "priority_distribution": {
      "high": 11,
      "medium": 9
    },
    "requirements_coverage": {
      "test_requirements": [
        {
          "name": "Permission boundaries",
          "type": "collection",
          "covered": true
        },
        {
          "name": "Role inheritance",
          "type": "combinatorial",
          "covered": false
        },
        {
          "name": "Active/inactive states",
          "type": "boundary",
          "covered": false
        }
      ],
      "constraints": [
        {
          "constraint": "user_is_active == true -> size(user_roles) >= 1",
          "covered": true
        },
        {
          "constraint": "size(user_permissions) >= size(user_roles)",
          "covered": false
        },
        {
          "constraint": "size(role_permissions) >= 1",
          "covered": false
        },
        {
          "constraint": "size(role_parent_roles) < 5",
          "covered": false
        }
      ],
      "rules": [
        {
          "rule": "Admin has all permissions",
          "covered": false
        },
        {
          "rule": "Inactive users have no permissions",
          "covered": false
        },
        {
          "rule": "Multiple roles increase permissions",
          "covered": false
        }
      ]
    }
  },
  "test_suites": {
    "functional": [
      {
        "id": "TEST_0001",
        "name": "Create User with valid business data",
        "type": "functional",
        "description": "Test creating User with realistic data",
        "test_data": {
          "user_id": 1,
          "user_roles": [
            "roles_0",
            "roles_1"
          ],
          "user_permissions": [
            "permissions_0",
            "permissions_1",
            "permissions_2"
          ],
          "user_is_active": true
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "user",
          "business_data"
        ]
      },
      {
        "id": "TEST_0002",
        "name": "Create User with all fields",
        "type": "functional",
        "description": "Test User with all optional fields",
        "test_data": {
          "user_id": 2,
          "user_roles": [
            "roles_0",
            "roles_1",
            "roles_2",
            "roles_3"
          ],
          "user_permissions": [
            "permissions_0",
            "permissions_1",
            "permissions_2"
          ],
          "user_is_active": true
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "user",
          "complete"
        ]
      },
      {
        "id": "TEST_0003",
        "name": "Create Role with valid business data",
        "type": "functional",
        "description": "Test creating Role with realistic data",
        "test_data": {
          "role_name": "test_value",
          "role_permissions": [
            "permissions_0",
            "permissions_1"
          ],
          "role_parent_roles": [
            "parent_roles_0"
          ]
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "role",
          "business_data"
        ]
      },
      {
        "id": "TEST_0004",
        "name": "Create Role with all fields",
        "type": "functional",
        "description": "Test Role with all optional fields",
        "test_data": {
          "role_name": "test_value",
          "role_permissions": [
            "permissions_0",
            "permissions_1"
          ],
          "role_parent_roles": [
            "parent_roles_0",
            "parent_roles_1",
            "parent_roles_2",
            "parent_roles_3",
            "parent_roles_4"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "role",
          "complete"
        ]
      }
    ],
    "constraint_satisfaction": [
      {
        "id": "TEST_0005",
        "name": "Constraint satisfaction: user_is_active == true -> size(user_roles) >= 1",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {},
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "user_is_active == true -> size(user_roles) >= 1"
        ]
      }
    ],
    "collection": [
      {
        "id": "TEST_0006",
        "name": "Required test - Empty user_permissions",
        "type": "collection",
        "description": "Test user_permissions empty as required",
        "test_data": {
          "user_permissions": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "user_permissions",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0007",
        "name": "Required test - Empty role_parent_roles",
        "type": "collection",
        "description": "Test role_parent_roles empty as required",
        "test_data": {
          "role_parent_roles": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "role_parent_roles",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0008",
        "name": "Required test - Single user_roles",
        "type": "collection",
        "description": "Test user_roles with single element as required",
        "test_data": {
          "user_roles": [
            "roles_0",
            "roles_1",
            "roles_2",
            "roles_3",
            "roles_4"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "user_roles",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0009",
        "name": "Required test - Single user_permissions",
        "type": "collection",
        "description": "Test user_permissions with single element as required",
        "test_data": {
          "user_permissions": [
            "permissions_0",
            "permissions_1",
            "permissions_2"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "user_permissions",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0010",
        "name": "Required test - Single role_permissions",
        "type": "collection",
        "description": "Test role_permissions with single element as required",
        "test_data": {
          "role_permissions": [
            "permissions_0",
            "permissions_1",
            "permissions_2",
            "permissions_3",
            "permissions_4"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "role_permissions",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0011",
        "name": "Required test - Single role_parent_roles",
        "type": "collection",
        "description": "Test role_parent_roles with single element as required",
        "test_data": {
          "role_parent_roles": [
            "parent_roles_0"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "role_parent_roles",
          "single",
          "required_test"
        ]
      }
    ],
    "boundary": [
      {
        "id": "TEST_0016",
        "name": "Boundary test: user_id = 1",
        "type": "boundary",
        "description": "Test minimum value for user_id",
        "test_data": {
          "user_id": 1
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "user_id",
          "min"
        ]
      },
      {
        "id": "TEST_0017",
        "name": "Boundary test: user_id < min",
        "type": "boundary",
        "description": "Test below minimum value for user_id",
        "test_data": {
          "user_id": 0
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "user_id",
          "below_min",
          "negative"
        ]
      }
    ],
    "negative": [
      {
        "id": "TEST_0018",
        "name": "Type validation for user_id",
        "type": "negative",
        "description": "Testing wrong type for user_id",
        "test_data": {
          "user_id": "not_a_number"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "user_id"
        ]
      },
      {
        "id": "TEST_0019",
        "name": "Type validation for user_roles (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection user_roles",
        "test_data": {
          "user_roles": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "user_roles"
        ]
      },
      {
        "id": "TEST_0020",
        "name": "Type validation for user_permissions (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection user_permissions",
        "test_data": {
          "user_permissions": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "user_permissions"
        ]
      },
      {
        "id": "TEST_0021",
        "name": "Type validation for user_is_active",
        "type": "negative",
        "description": "Testing wrong type for user_is_active",
        "test_data": {
          "user_is_active": "not_a_bool"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "user_is_active"
        ]
      },
      {
        "id": "TEST_0022",
        "name": "Type validation for role_name",
        "type": "negative",
        "description": "Testing wrong type for role_name",
        "test_data": {
          "role_name": 12345
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "role_name"
        ]
      },
      {
        "id": "TEST_0023",
        "name": "Type validation for role_permissions (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection role_permissions",
        "test_data": {
          "role_permissions": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "role_permissions"
        ]
      },
      {
        "id": "TEST_0024",
        "name": "Type validation for role_parent_roles (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection role_parent_roles",
        "test_data": {
          "role_parent_roles": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "role_parent_roles"
        ]
      }
    ]
  }
}