{
  "meta": {
    "generator": "Unified DSL Test Generator v5.0",
    "domain": "E-commerce Shopping Cart",
    "timestamp": "2025-07-11T00:29:31.348571",
    "dsl_file": "examples/intermediate/shopping_cart.yaml",
    "test_requirements_parsed": true
  },
  "summary": {
    "total_tests": 39,
    "test_distribution": {
      "functional": 4,
      "constraint_satisfaction": 2,
      "constraint_violation": 5,
      "boundary": 6,
      "collection": 5,
      "combinatorial": 4,
      "rule_activation": 3,
      "rule_deactivation": 3,
      "negative": 7
    },
    "tag_distribution": {
      "functional": 4,
      "cart": 2,
      "business_data": 2,
      "complete": 2,
      "product": 2,
      "constraint": 7,
      "satisfaction": 2,
      "violation": 5,
      "negative": 15,
      "boundary": 6,
      "cart_total_price": 3,
      "min": 3,
      "below_min": 3,
      "collection": 5,
      "cart_items": 3,
      "empty": 2,
      "required_test": 5,
      "cart_discount_codes": 3,
      "single": 3,
      "product_categories": 2,
      "combinatorial": 4,
      "2way": 4,
      "is_premium_member": 4,
      "discount_codes": 4,
      "rule": 6,
      "activation": 3,
      "free_shipping_for_premium": 2,
      "deactivation": 3,
      "bulk_discount": 2,
      "empty_cart_has_zero_total": 2,
      "product_id": 3,
      "product_price": 3,
      "type_validation": 7,
      "cart_is_premium_member": 1
    },
    "priority_distribution": {
      "high": 14,
      "medium": 25
    },
    "requirements_coverage": {
      "test_requirements": [
        {
          "name": "Cart boundary tests",
          "type": "boundary",
          "covered": true
        },
        {
          "name": "Collection tests",
          "type": "collection",
          "covered": true
        },
        {
          "name": "Discount combinations",
          "type": "combinatorial",
          "covered": true
        }
      ],
      "constraints": [
        {
          "constraint": "cart_total_price >= 0",
          "covered": true
        },
        {
          "constraint": "size(cart_items) <= 50",
          "covered": true
        },
        {
          "constraint": "size(cart_discount_codes) <= 5",
          "covered": true
        },
        {
          "constraint": "product_price > 0",
          "covered": true
        },
        {
          "constraint": "size(product_categories) >= 1",
          "covered": true
        }
      ],
      "rules": [
        {
          "rule": "Free shipping for premium",
          "covered": true
        },
        {
          "rule": "Bulk discount",
          "covered": true
        },
        {
          "rule": "Empty cart has zero total",
          "covered": true
        }
      ]
    }
  },
  "test_suites": {
    "functional": [
      {
        "id": "TEST_0001",
        "name": "Create Cart with valid business data",
        "type": "functional",
        "description": "Test creating Cart with realistic data",
        "test_data": {
          "cart_items": [
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009
          ],
          "cart_total_price": 116.09,
          "cart_discount_codes": [
            "VIP20",
            "BULK15",
            "MEMBER10",
            "SUMMER25"
          ],
          "cart_is_premium_member": true
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "cart",
          "business_data"
        ]
      },
      {
        "id": "TEST_0002",
        "name": "Create Cart with all fields",
        "type": "functional",
        "description": "Test Cart with all optional fields",
        "test_data": {
          "cart_items": [
            1010,
            1011,
            1012,
            1013,
            1014,
            1015,
            1016,
            1017,
            1018
          ],
          "cart_total_price": 59.3,
          "cart_discount_codes": [
            "SAVE10",
            "VIP20",
            "WELCOME5",
            "MEMBER10",
            "BULK15"
          ],
          "cart_is_premium_member": false
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "cart",
          "complete"
        ]
      },
      {
        "id": "TEST_0003",
        "name": "Create Product with valid business data",
        "type": "functional",
        "description": "Test creating Product with realistic data",
        "test_data": {
          "product_id": 1019,
          "product_price": 218.74,
          "product_categories": [
            "home",
            "toys"
          ]
        },
        "expected_result": "pass",
        "priority": 9,
        "tags": [
          "functional",
          "product",
          "business_data"
        ]
      },
      {
        "id": "TEST_0004",
        "name": "Create Product with all fields",
        "type": "functional",
        "description": "Test Product with all optional fields",
        "test_data": {
          "product_id": 1020,
          "product_price": 85.99,
          "product_categories": [
            "food",
            "sports"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "functional",
          "product",
          "complete"
        ]
      }
    ],
    "constraint_satisfaction": [
      {
        "id": "TEST_0005",
        "name": "Constraint satisfaction: cart_total_price >= 0",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "cart_total_price": 75.50791207802915,
          "cart_items": [
            1021,
            1022,
            1023,
            1024,
            1025,
            1026
          ],
          "cart_discount_codes": [
            "VIP20",
            "MEMBER10"
          ],
          "cart_is_premium_member": true
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "cart_total_price >= 0"
        ]
      },
      {
        "id": "TEST_0009",
        "name": "Constraint satisfaction: product_price > 0",
        "type": "constraint_satisfaction",
        "description": "Test constraint is satisfied",
        "test_data": {
          "product_price": 69.63304842460698,
          "product_id": 1042,
          "product_categories": [
            "food",
            "toys",
            "sports"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "constraint",
          "satisfaction"
        ],
        "constraints_tested": [
          "product_price > 0"
        ]
      }
    ],
    "constraint_violation": [
      {
        "id": "TEST_0006",
        "name": "Constraint violation: cart_total_price >= 0",
        "type": "constraint_violation",
        "description": "Test constraint is violated",
        "test_data": {
          "cart_total_price": -10.0,
          "cart_items": [
            1027,
            1028,
            1029,
            1030,
            1031,
            1032,
            1033,
            1034,
            1035,
            1036
          ],
          "cart_discount_codes": [
            "SUMMER25",
            "SAVE10",
            "WELCOME5",
            "BULK15"
          ],
          "cart_is_premium_member": false
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "constraint",
          "violation",
          "negative"
        ],
        "constraints_tested": [
          "cart_total_price >= 0"
        ]
      },
      {
        "id": "TEST_0007",
        "name": "Constraint violation: size(cart_items) <= 50",
        "type": "constraint_violation",
        "description": "Test constraint is violated",
        "test_data": {
          "cart_items": [
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009,
            1010,
            1011,
            1012,
            1013,
            1014,
            1015,
            1016,
            1017,
            1018,
            1019,
            1020,
            1021,
            1022,
            1023,
            1024,
            1025,
            1026,
            1027,
            1028,
            1029,
            1030,
            1031,
            1032,
            1033,
            1034,
            1035,
            1036,
            1037,
            1038,
            1039,
            1040,
            1041,
            1042,
            1043,
            1044,
            1045,
            1046,
            1047,
            1048,
            1049,
            1050,
            1051
          ],
          "cart_total_price": 252.99,
          "cart_discount_codes": [
            "SUMMER25",
            "VIP20",
            "WELCOME5"
          ],
          "cart_is_premium_member": false
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "constraint",
          "violation",
          "negative"
        ],
        "constraints_tested": [
          "size(cart_items) <= 50"
        ]
      },
      {
        "id": "TEST_0008",
        "name": "Constraint violation: size(cart_discount_codes) <= 5",
        "type": "constraint_violation",
        "description": "Test constraint is violated",
        "test_data": {
          "cart_discount_codes": [
            "CODE0",
            "CODE1",
            "CODE2",
            "CODE3",
            "CODE4",
            "CODE5"
          ],
          "cart_items": [
            1037,
            1038,
            1039,
            1040,
            1041
          ],
          "cart_total_price": 220.98,
          "cart_is_premium_member": true
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "constraint",
          "violation",
          "negative"
        ],
        "constraints_tested": [
          "size(cart_discount_codes) <= 5"
        ]
      },
      {
        "id": "TEST_0010",
        "name": "Constraint violation: product_price > 0",
        "type": "constraint_violation",
        "description": "Test constraint is violated",
        "test_data": {
          "product_price": 0.0,
          "product_id": 1043,
          "product_categories": [
            "home"
          ]
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "constraint",
          "violation",
          "negative"
        ],
        "constraints_tested": [
          "product_price > 0"
        ]
      },
      {
        "id": "TEST_0011",
        "name": "Constraint violation: size(product_categories) >= 1",
        "type": "constraint_violation",
        "description": "Test constraint is violated",
        "test_data": {
          "product_categories": [],
          "product_id": 1044,
          "product_price": 65.89
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "constraint",
          "violation",
          "negative"
        ],
        "constraints_tested": [
          "size(product_categories) >= 1"
        ]
      }
    ],
    "boundary": [
      {
        "id": "TEST_0012",
        "name": "Boundary test: cart_total_price = 0",
        "type": "boundary",
        "description": "Test minimum value for cart_total_price",
        "test_data": {
          "cart_total_price": 0
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "cart_total_price",
          "min"
        ]
      },
      {
        "id": "TEST_0013",
        "name": "Boundary test: cart_total_price < min",
        "type": "boundary",
        "description": "Test below minimum value for cart_total_price",
        "test_data": {
          "cart_total_price": -1
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "cart_total_price",
          "below_min",
          "negative"
        ]
      },
      {
        "id": "TEST_0031",
        "name": "Boundary test: product_id = 1",
        "type": "boundary",
        "description": "Test minimum value for product_id",
        "test_data": {
          "product_id": 1
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "product_id",
          "min"
        ]
      },
      {
        "id": "TEST_0032",
        "name": "Boundary test: product_id < min",
        "type": "boundary",
        "description": "Test below minimum value for product_id",
        "test_data": {
          "product_id": 0
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "product_id",
          "below_min",
          "negative"
        ]
      },
      {
        "id": "TEST_0033",
        "name": "Boundary test: product_price = 0.01",
        "type": "boundary",
        "description": "Test minimum value for product_price",
        "test_data": {
          "product_price": 0.01
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "boundary",
          "product_price",
          "min"
        ]
      },
      {
        "id": "TEST_0034",
        "name": "Boundary test: product_price < min",
        "type": "boundary",
        "description": "Test below minimum value for product_price",
        "test_data": {
          "product_price": -0.99
        },
        "expected_result": "fail",
        "priority": 7,
        "tags": [
          "boundary",
          "product_price",
          "below_min",
          "negative"
        ]
      }
    ],
    "collection": [
      {
        "id": "TEST_0014",
        "name": "Required test - Empty cart_items",
        "type": "collection",
        "description": "Test cart_items empty as required",
        "test_data": {
          "cart_items": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "cart_items",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0015",
        "name": "Required test - Empty cart_discount_codes",
        "type": "collection",
        "description": "Test cart_discount_codes empty as required",
        "test_data": {
          "cart_discount_codes": []
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "cart_discount_codes",
          "empty",
          "required_test"
        ]
      },
      {
        "id": "TEST_0016",
        "name": "Required test - Single cart_items",
        "type": "collection",
        "description": "Test cart_items with single element as required",
        "test_data": {
          "cart_items": [
            1045,
            1046
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "cart_items",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0017",
        "name": "Required test - Single cart_discount_codes",
        "type": "collection",
        "description": "Test cart_discount_codes with single element as required",
        "test_data": {
          "cart_discount_codes": [
            "VIP20"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "cart_discount_codes",
          "single",
          "required_test"
        ]
      },
      {
        "id": "TEST_0018",
        "name": "Required test - Single product_categories",
        "type": "collection",
        "description": "Test product_categories with single element as required",
        "test_data": {
          "product_categories": [
            "food"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "collection",
          "product_categories",
          "single",
          "required_test"
        ]
      }
    ],
    "combinatorial": [
      {
        "id": "TEST_0019",
        "name": "2-way combination #1: is_premium_member × discount_codes",
        "type": "combinatorial",
        "description": "Test combination of is_premium_member and discount_codes",
        "test_data": {
          "cart_is_premium_member": true,
          "cart_discount_codes": [
            "COMBO10"
          ]
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "is_premium_member",
          "discount_codes"
        ]
      },
      {
        "id": "TEST_0020",
        "name": "2-way combination #2: is_premium_member × discount_codes",
        "type": "combinatorial",
        "description": "Test combination of is_premium_member and discount_codes",
        "test_data": {
          "cart_is_premium_member": true,
          "cart_discount_codes": []
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "is_premium_member",
          "discount_codes"
        ]
      },
      {
        "id": "TEST_0021",
        "name": "2-way combination #3: is_premium_member × discount_codes",
        "type": "combinatorial",
        "description": "Test combination of is_premium_member and discount_codes",
        "test_data": {
          "cart_is_premium_member": false,
          "cart_discount_codes": [
            "COMBO10"
          ]
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "is_premium_member",
          "discount_codes"
        ]
      },
      {
        "id": "TEST_0022",
        "name": "2-way combination #4: is_premium_member × discount_codes",
        "type": "combinatorial",
        "description": "Test combination of is_premium_member and discount_codes",
        "test_data": {
          "cart_is_premium_member": false,
          "cart_discount_codes": []
        },
        "expected_result": "pass",
        "priority": 5,
        "tags": [
          "combinatorial",
          "2way",
          "is_premium_member",
          "discount_codes"
        ]
      }
    ],
    "rule_activation": [
      {
        "id": "TEST_0023",
        "name": "Rule activation: Free shipping for premium",
        "type": "rule_activation",
        "description": "Test Free shipping for premium when condition is true",
        "test_data": {
          "cart_is_premium_member": true,
          "cart_total_price": 50.0,
          "cart_items": [
            1047,
            1048
          ],
          "cart_discount_codes": [
            "MEMBER10"
          ]
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "free_shipping_for_premium"
        ],
        "rules_tested": [
          "Free shipping for premium"
        ]
      },
      {
        "id": "TEST_0025",
        "name": "Rule activation: Bulk discount",
        "type": "rule_activation",
        "description": "Test Bulk discount when condition is true",
        "test_data": {
          "cart_items": [
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009,
            1010
          ],
          "cart_discount_codes": [
            "BULK10"
          ],
          "cart_total_price": 113.99,
          "cart_is_premium_member": false
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "bulk_discount"
        ],
        "rules_tested": [
          "Bulk discount"
        ]
      },
      {
        "id": "TEST_0027",
        "name": "Rule activation: Empty cart has zero total",
        "type": "rule_activation",
        "description": "Test Empty cart has zero total when condition is true",
        "test_data": {
          "cart_items": [],
          "cart_total_price": 0.0,
          "cart_discount_codes": [
            "SAVE10"
          ],
          "cart_is_premium_member": true
        },
        "expected_result": "pass",
        "priority": 8,
        "tags": [
          "rule",
          "activation",
          "empty_cart_has_zero_total"
        ],
        "rules_tested": [
          "Empty cart has zero total"
        ]
      }
    ],
    "rule_deactivation": [
      {
        "id": "TEST_0024",
        "name": "Rule deactivation: Free shipping for premium",
        "type": "rule_deactivation",
        "description": "Test Free shipping for premium when condition is false",
        "test_data": {
          "cart_is_premium_member": false,
          "cart_total_price": 50.0,
          "cart_items": [
            1049,
            1050,
            1051,
            1052,
            1053,
            1054
          ],
          "cart_discount_codes": [
            "BULK15"
          ]
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "rule",
          "deactivation",
          "free_shipping_for_premium"
        ],
        "rules_tested": [
          "Free shipping for premium"
        ]
      },
      {
        "id": "TEST_0026",
        "name": "Rule deactivation: Bulk discount",
        "type": "rule_deactivation",
        "description": "Test Bulk discount when condition is false",
        "test_data": {
          "cart_items": [
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008,
            1009
          ],
          "cart_discount_codes": [],
          "cart_total_price": 278.84,
          "cart_is_premium_member": false
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "rule",
          "deactivation",
          "bulk_discount"
        ],
        "rules_tested": [
          "Bulk discount"
        ]
      },
      {
        "id": "TEST_0028",
        "name": "Rule deactivation: Empty cart has zero total",
        "type": "rule_deactivation",
        "description": "Test Empty cart has zero total when condition is false",
        "test_data": {
          "cart_items": [
            1001
          ],
          "cart_total_price": 29.99,
          "cart_discount_codes": [
            "MEMBER10"
          ],
          "cart_is_premium_member": true
        },
        "expected_result": "pass",
        "priority": 7,
        "tags": [
          "rule",
          "deactivation",
          "empty_cart_has_zero_total"
        ],
        "rules_tested": [
          "Empty cart has zero total"
        ]
      }
    ],
    "negative": [
      {
        "id": "TEST_0035",
        "name": "Type validation for cart_items (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection cart_items",
        "test_data": {
          "cart_items": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "cart_items"
        ]
      },
      {
        "id": "TEST_0036",
        "name": "Type validation for cart_total_price",
        "type": "negative",
        "description": "Testing wrong type for cart_total_price",
        "test_data": {
          "cart_total_price": "not_a_float"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "cart_total_price"
        ]
      },
      {
        "id": "TEST_0037",
        "name": "Type validation for cart_discount_codes (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection cart_discount_codes",
        "test_data": {
          "cart_discount_codes": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "cart_discount_codes"
        ]
      },
      {
        "id": "TEST_0038",
        "name": "Type validation for cart_is_premium_member",
        "type": "negative",
        "description": "Testing wrong type for cart_is_premium_member",
        "test_data": {
          "cart_is_premium_member": "not_a_bool"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "cart_is_premium_member"
        ]
      },
      {
        "id": "TEST_0039",
        "name": "Type validation for product_id",
        "type": "negative",
        "description": "Testing wrong type for product_id",
        "test_data": {
          "product_id": "not_a_number"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "product_id"
        ]
      },
      {
        "id": "TEST_0040",
        "name": "Type validation for product_price",
        "type": "negative",
        "description": "Testing wrong type for product_price",
        "test_data": {
          "product_price": "not_a_float"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "product_price"
        ]
      },
      {
        "id": "TEST_0041",
        "name": "Type validation for product_categories (not array)",
        "type": "negative",
        "description": "Testing non-array value for collection product_categories",
        "test_data": {
          "product_categories": "not_an_array"
        },
        "expected_result": "fail",
        "priority": 6,
        "tags": [
          "negative",
          "type_validation",
          "product_categories"
        ]
      }
    ]
  }
}